/*var kasungusites = {
    "Kasungu D.H.":[-13.203611111, 33.14880, "#cf0", "square"]
};*/

var kasungusites = {};

var kasungu = function(ctx, color, sites) {
    ctx.save();
    ctx.beginPath();
    ctx.moveTo(0,0);
    ctx.lineTo(450.99979,0);
    ctx.lineTo(450.99979,537.72101);
    ctx.lineTo(0,537.72101);
    ctx.closePath();
    ctx.clip();
    ctx.strokeStyle = 'rgba(0,0,0,0)';
    ctx.lineCap = 'butt';
    ctx.lineJoin = 'miter';
    ctx.miterLimit = 4;
    ctx.save();
    ctx.restore();
    ctx.save();
    ctx.restore();
    ctx.save();
    ctx.restore();
    ctx.save();
    ctx.translate(-22.076006,-6.8183144);
    ctx.save();
    ctx.fillStyle = (typeof(color) != "undefined" ? color : "rgba(118, 104, 79, 0.94)");
    ctx.strokeStyle = "#000000";
    ctx.beginPath();
    ctx.moveTo(158.39661,521.3629);
    ctx.bezierCurveTo(128.12561,489.67839999999995,119.16051000000002,474.81321999999994,119.06611000000001,456.14822);
    ctx.bezierCurveTo(118.92001,427.30222,114.44501000000001,425.01662,66.43230300000002,429.26671999999996);
    ctx.bezierCurveTo(15.34100100000002,433.78932,11.570001000000019,428.78461999999996,41.28540100000002,395.89322);
    ctx.bezierCurveTo(58.910400000000024,376.38452,59.23560000000002,375.22731999999996,51.956701000000024,357.91591999999997);
    ctx.bezierCurveTo(42.25910100000002,334.85222,42.430201000000025,310.07131999999996,52.45250100000003,286.08462);
    ctx.bezierCurveTo(65.89610300000002,253.90931999999998,62.99060000000003,227.25751999999997,43.965301000000025,208.23221999999998);
    ctx.lineTo(27.474701000000024,191.74151999999998);
    ctx.lineTo(39.42820100000002,171.80631999999997);
    ctx.bezierCurveTo(46.00270100000002,160.84191999999996,56.15010000000002,143.09181999999998,61.97790000000002,132.36171999999996);
    ctx.bezierCurveTo(75.02750300000002,108.33494999999996,102.11691000000002,101.86058999999996,116.97781000000002,119.21675999999997);
    ctx.bezierCurveTo(125.77881000000002,129.49556999999996,126.45271000000002,129.20154999999997,149.14731,105.18183999999997);
    ctx.bezierCurveTo(170.45141,82.63368599999997,174.25781,80.72285599999996,196.1793,81.57124599999997);
    ctx.bezierCurveTo(216.85028,82.37124599999997,222.58389,80.00478599999997,239.17224000000002,63.82645599999998);
    ctx.bezierCurveTo(249.69983000000002,53.559115999999975,260.50828,39.88177799999998,263.19109000000003,33.432437999999976);
    ctx.bezierCurveTo(269.95917000000003,17.162237999999977,294.0885,1.872267999999977,301.42261,9.206377999999976);
    ctx.bezierCurveTo(305.40065000000004,13.184417999999976,302.94982000000005,18.443617999999976,293.14521,26.968617999999974);
    ctx.bezierCurveTo(277.58721,40.49613799999997,276.20144000000005,49.702605999999975,286.83338000000003,68.90110599999997);
    ctx.bezierCurveTo(292.99304,80.02382599999997,292.90478,83.75409599999998,286.24140000000006,93.92373999999997);
    ctx.bezierCurveTo(264.10245000000003,127.71201999999997,330.54469000000006,175.61291999999997,370.1499600000001,154.41681999999997);
    ctx.bezierCurveTo(386.08058000000005,145.89103999999998,401.9358000000001,158.60791999999998,401.9358000000001,179.91101999999998);
    ctx.bezierCurveTo(401.9358000000001,193.89451999999997,405.3962900000001,199.49051999999998,419.2765800000001,207.95351999999997);
    ctx.bezierCurveTo(428.8140000000001,213.76861999999997,442.0196900000001,218.53541999999996,448.62250000000006,218.54631999999998);
    ctx.bezierCurveTo(455.2253400000001,218.55731999999998,460.62766000000005,221.37851999999998,460.62766000000005,224.81571999999997);
    ctx.bezierCurveTo(460.62766000000005,228.25291999999996,464.12659,234.93141999999997,468.40302,239.65681999999998);
    ctx.bezierCurveTo(475.30167,247.27962,474.36813,250.18552,460.12405,265.42661999999996);
    ctx.bezierCurveTo(451.29414,274.87461999999994,436.39032000000003,286.53022,427.00447,291.32811999999996);
    ctx.bezierCurveTo(417.6186,296.12602,398.87311,311.51811999999995,385.34778000000006,325.53281999999996);
    ctx.bezierCurveTo(371.82250000000005,339.54761999999994,349.0127100000001,356.99531999999994,334.65936000000005,364.30551999999994);
    ctx.bezierCurveTo(320.3060300000001,371.6158199999999,300.42598000000004,386.83431999999993,290.48144,398.12451999999996);
    ctx.bezierCurveTo(276.91246,413.52961999999997,268.3245,418.65221999999994,256.06681000000003,418.65221999999994);
    ctx.bezierCurveTo(240.87167000000002,418.65221999999994,239.68127000000004,420.0515199999999,238.98892000000004,438.72741999999994);
    ctx.bezierCurveTo(238.50092000000004,451.89041999999995,232.43830000000003,466.8880199999999,221.38120000000004,482.28471999999994);
    ctx.bezierCurveTo(212.10631000000004,495.1997999999999,204.51774000000003,511.49679999999995,204.51774000000003,518.5002);
    ctx.bezierCurveTo(204.51774000000003,531.9222,195.67823000000004,544.0392999999999,185.88687000000004,544.0392999999999);
    ctx.bezierCurveTo(182.68289000000004,544.0392999999999,170.31231000000005,533.8349,158.39661000000004,521.3628999999999);
    ctx.lineTo(158.39661000000004,521.3628999999999);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    
    if(typeof(sites) != "undefined"){
        var pos = 1;
        for(var site in sites){
            var position = sites[site];
            var scale = ctx.canvas.width * 100 / 50;
            
            var x = Math.abs((Math.abs(position[1]) - Math.abs(gpscoords["kasungu"][1]))) * scale;
            var y = Math.abs((Math.abs(position[0]) - Math.abs(gpscoords["kasungu"][0]))) * scale;
            var radius = 25;
            
            ctx.fillStyle = position[2];
            ctx.strokeStyle = "#000000";
            ctx.lineWidth = 1;
            ctx.miterLimit = 4;
            ctx.beginPath();
            
            var offsetX = 0;
            var offsetY = 0;
            switch(position[3]){
                case "circle":
                    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);
                    offsetX = radius + 5;
                    offsetY = -radius / 2;
                    break;
                case "square":
                    ctx.moveTo(x,y);
                    ctx.lineTo(x+(radius*2),y);
                    ctx.lineTo(x+(radius*2),y+(radius*2));
                    ctx.lineTo(x,y+(radius*2));
                    ctx.lineTo(x,y);    
                    offsetX = (radius * 2) + 5;
                    offsetY = radius;
                    break;
            }            
            
            ctx.closePath();
            ctx.fill();
            ctx.stroke();
            
            ctx.textBaseline = 'top';
            ctx.font         = 'normal 20px sans-serif';
            ctx.strokeText(alpha[pos], x + offsetX, y + offsetY);
            
            pos++;
        }
    }
    
    ctx.restore();
    ctx.restore();
    ctx.restore();
};