/*var ntcheusites = {
    "Ntcheu D.H.":[-14.81688889, 34.63830556, "#FFBF00", "square"]
};*/

var ntcheusites = {};

var ntcheu = function(ctx, color, sites) {
    ctx.save();
    ctx.beginPath();
    ctx.moveTo(0,0);
    ctx.lineTo(305.15753,0);
    ctx.lineTo(305.15753,539.68134);
    ctx.lineTo(0,539.68134);
    ctx.closePath();
    ctx.clip();
    ctx.strokeStyle = 'rgba(0,0,0,0)';
    ctx.lineCap = 'butt';
    ctx.lineJoin = 'miter';
    ctx.miterLimit = 4;
    ctx.save();
    ctx.restore();
    ctx.save();
    ctx.restore();
    ctx.save();
    ctx.restore();
    ctx.save();
    ctx.translate(-47.049414,-8.9686486);
    ctx.save();
    ctx.fillStyle = (typeof(color) != "undefined" ? color : "rgba(118, 104, 79, 0.94)");
    ctx.strokeStyle = "#000000";
    ctx.lineWidth = 2;
    ctx.beginPath();
    ctx.moveTo(264.71201,541.7998);
    ctx.bezierCurveTo(260.06817,534.71248,250.52701000000002,531.0436100000001,217.63787000000002,523.6984);
    ctx.bezierCurveTo(171.78920000000002,513.45891,149.04260000000002,505.1774,143.48981000000003,496.70265);
    ctx.bezierCurveTo(139.00194000000005,489.85322,141.05382000000003,460.23846000000003,146.98049000000003,446.32178);
    ctx.bezierCurveTo(152.65545000000003,432.99637,152.68816000000004,430.69659,147.23834000000002,428.21344999999997);
    ctx.bezierCurveTo(141.77374000000003,425.72360999999995,141.80614000000003,423.73458,147.43219000000002,416.31593);
    ctx.bezierCurveTo(155.23676000000003,406.02446999999995,158.77168000000003,396.21542,158.71803000000003,384.99924);
    ctx.bezierCurveTo(158.67483000000001,376.25624,157.64254000000003,372.79825,152.16100000000003,363.06264999999996);
    ctx.bezierCurveTo(132.88334000000003,328.82462999999996,132.17907000000002,326.27322999999996,137.00781000000003,308.16470999999996);
    ctx.bezierCurveTo(142.24886000000004,288.50981999999993,138.86606000000003,273.50491999999997,119.42324000000004,230.16672999999997);
    ctx.bezierCurveTo(114.25418000000003,218.64486999999997,110.02497000000004,206.86096999999998,110.02497000000004,203.98024999999998);
    ctx.bezierCurveTo(110.02497000000004,201.09956,112.14434000000004,194.16993,114.73464000000004,188.58102);
    ctx.bezierCurveTo(120.98270000000004,175.10008,121.31334000000004,159.50808,115.59712000000005,147.90585);
    ctx.bezierCurveTo(113.42593,143.49904,103.78467,131.0369,94.17209,120.21218);
    ctx.bezierCurveTo(68.29623,91.07349,45.423115,54.64628,50.078906,49.990542);
    ctx.bezierCurveTo(50.73539,49.333971,55.44604700000001,50.843681,60.54703000000001,53.345541);
    ctx.bezierCurveTo(65.64797,55.847283999999995,72.83091,58.43398,76.50909,59.093795);
    ctx.bezierCurveTo(80.18726,59.753598,87.16628,62.142233,92.01801,64.401775);
    ctx.bezierCurveTo(102.33513,69.206663,107.00114,69.557153,110.14927,65.763923);
    ctx.bezierCurveTo(112.43164,63.013819000000005,119.86062,63.058611000000006,128.46027,65.87441700000001);
    ctx.bezierCurveTo(131.42813,66.84615900000001,134.76339000000002,64.864789,144.90336000000002,56.10628600000001);
    ctx.bezierCurveTo(174.04000000000002,30.939434000000013,201.14357,11.391849000000015,206.90187000000003,11.391849000000015);
    ctx.bezierCurveTo(208.66468000000003,11.391849000000015,212.03477000000004,13.682891000000016,214.39112000000003,16.483192000000017);
    ctx.bezierCurveTo(221.03591000000003,24.380240000000015,223.19388000000004,36.71198000000002,221.89877000000004,59.38724000000002);
    ctx.bezierCurveTo(220.63050000000004,81.59360000000002,220.90939000000003,82.54355900000002,232.31688000000005,94.85802000000001);
    ctx.bezierCurveTo(241.75159000000005,105.04276000000002,243.42384000000004,109.36758,242.13497000000007,120.24948);
    ctx.bezierCurveTo(240.68323000000007,132.50782,245.39174000000006,139.60432,275.92120000000006,171.17012);
    ctx.bezierCurveTo(307.6110800000001,203.93577,316.29015000000004,214.21282,321.44583000000006,225.0765);
    ctx.bezierCurveTo(324.39736000000005,231.29578,328.01095000000004,235.34123,334.58750000000003,239.78876000000002);
    ctx.bezierCurveTo(352.52630000000005,251.92019000000002,354.33316,266.08287,341.32924,292.63073);
    ctx.bezierCurveTo(336.79491,301.88771,330.77423000000005,315.72860000000003,327.95008,323.38824000000005);
    ctx.bezierCurveTo(318.85267,348.06169000000006,295.11184000000003,444.66820000000007,289.35138,480.4547100000001);
    ctx.bezierCurveTo(287.04263000000003,494.7975100000001,285.56973,498.2208300000001,280.98602,499.8982200000001);
    ctx.bezierCurveTo(280.29337,500.1516900000001,278.8943,506.5901800000001,277.87701,514.2059600000001);
    ctx.bezierCurveTo(275.65276,530.8571700000001,271.51459,546.2268000000001,269.25536999999997,546.2268000000001);
    ctx.bezierCurveTo(268.35193999999996,546.2268000000001,266.30751999999995,544.2347500000002,264.71223999999995,541.7999500000002);
    ctx.lineTo(264.71223999999995,541.7999500000002);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    
    if(typeof(sites) != "undefined"){
        var pos = 1;
        for(var site in sites){
            var position = sites[site];
            var scale = ctx.canvas.width * 100 / 30;
            
            var x = Math.abs((Math.abs(position[1]) - Math.abs(gpscoords["ntcheu"][1]))) * scale;
            var y = Math.abs((Math.abs(position[0]) - Math.abs(gpscoords["ntcheu"][0]))) * scale;
            var radius = 25;
            
            ctx.fillStyle = position[2];
            ctx.strokeStyle = "#000000";
            ctx.lineWidth = 1;
            ctx.miterLimit = 4;
            ctx.beginPath();
            
            var offsetX = 0;
            var offsetY = 0;
            switch(position[3]){
                case "circle":
                    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);
                    offsetX = radius + 5;
                    offsetY = -radius / 2;
                    break;
                case "square":
                    ctx.moveTo(x,y);
                    ctx.lineTo(x+(radius*2),y);
                    ctx.lineTo(x+(radius*2),y+(radius*2));
                    ctx.lineTo(x,y+(radius*2));
                    ctx.lineTo(x,y);    
                    offsetX = (radius * 2) + 5;
                    offsetY = radius;
                    break;
            }            
            
            ctx.closePath();
            ctx.fill();
            ctx.stroke();
            
            ctx.textBaseline = 'top';
            ctx.font         = 'normal 20px sans-serif';
            ctx.strokeText(alpha[pos], x + offsetX, y + offsetY);
            
            pos++;
        }
    }
    
    ctx.restore();
    ctx.restore();
    ctx.restore();
};